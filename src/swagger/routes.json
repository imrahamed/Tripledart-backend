{
    "openapi": "3.0.0",
    "info": {
        "title": "Tripledart Influencer Marketing Platform API",
        "version": "1.0.0",
        "description": "API documentation for Tripledart Influencer Marketing Platform"
    },
    "servers": [
        {
            "url": "http://localhost:4000",
            "description": "Development server"
        }
    ],
    "tags": [
        {
            "name": "Authentication",
            "description": "User authentication and authorization"
        },
        {
            "name": "Users",
            "description": "User account management"
        },
        {
            "name": "Influencers",
            "description": "Influencer profile management and search"
        },
        {
            "name": "Campaigns",
            "description": "Campaign creation, management, and tracking"
        },
        {
            "name": "Analytics",
            "description": "Campaign performance analytics and reporting"
        },
        {
            "name": "Content",
            "description": "Content creation, scheduling, and management"
        },
        {
            "name": "ClientRelationships",
            "description": "Management of influencer-client relationships"
        },
        {
            "name": "Revenue",
            "description": "Revenue tracking and financial reporting"
        },
        {
            "name": "Phyllo",
            "description": "Phyllo integration for real-time influencer data"
        },
        {
            "name": "Notifications",
            "description": "System notifications and alerts"
        },
        {
            "name": "Settings",
            "description": "Platform and user settings management"
        },
        {
            "name": "Reports",
            "description": "Generation and management of custom reports"
        },
        {
            "name": "Integrations",
            "description": "Third-party platform integrations"
        }
    ],
    "paths": {
        "/api/auth": {
            "post": {
                "summary": "Register a new user",
                "tags": ["Authentication"],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRegistration"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "summary": "Authenticate user and get token",
                "tags": ["Authentication"],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserLogin"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Authentication successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthToken"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                }
            }
        },
        "/api/auth/request-reset": {
            "post": {
                "summary": "Request password reset",
                "tags": ["Authentication"],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    }
                                },
                                "required": ["email"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset email sent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/auth/reset-password": {
            "post": {
                "summary": "Reset password",
                "tags": ["Authentication"],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "token": {
                                        "type": "string"
                                    },
                                    "newPassword": {
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "required": ["token", "newPassword"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "summary": "Get all users",
                "tags": ["Users"],
                "security": [{ "BearerAuth": [] }],
                "responses": {
                    "200": {
                        "description": "List of users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/{userId}": {
            "get": {
                "summary": "Get user profile",
                "tags": ["Users"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "security": [{ "BearerAuth": [] }],
                "responses": {
                    "200": {
                        "description": "User profile retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "put": {
                "summary": "Update user profile",
                "tags": ["Users"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "security": [{ "BearerAuth": [] }],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/influencers": {
            "get": {
                "summary": "Search influencers",
                "tags": ["Influencers"],
                "parameters": [
                    {
                        "in": "query",
                        "name": "platform",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "minFollowers",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "maxFollowers",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "security": [{ "BearerAuth": [] }],
                "responses": {
                    "200": {
                        "description": "List of influencers matching criteria",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Influencer"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create a new influencer",
                "tags": ["Influencers"],
                "security": [{ "BearerAuth": [] }],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InfluencerCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Influencer created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Influencer"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    }
                }
            }
        },
        "/api/influencers/{influencerId}": {
            "get": {
                "summary": "Get influencer details",
                "tags": ["Influencers"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "influencerId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "security": [{ "BearerAuth": [] }],
                "responses": {
                    "200": {
                        "description": "Influencer details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Influencer"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "put": {
                "summary": "Update influencer details",
                "tags": ["Influencers"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "influencerId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "security": [{ "BearerAuth": [] }],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InfluencerUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Influencer updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Influencer"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/campaigns": {
            "post": {
                "summary": "Create a new campaign",
                "tags": ["Campaigns"],
                "security": [{ "BearerAuth": [] }],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CampaignCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Campaign created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Campaign"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    }
                }
            },
            "get": {
                "summary": "Get all campaigns",
                "tags": ["Campaigns"],
                "security": [{ "BearerAuth": [] }],
                "responses": {
                    "200": {
                        "description": "List of campaigns",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Campaign"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/campaigns/{campaignId}": {
            "get": {
                "summary": "Get campaign details",
                "tags": ["Campaigns"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "campaignId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "security": [{ "BearerAuth": [] }],
                "responses": {
                    "200": {
                        "description": "Campaign details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Campaign"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "put": {
                "summary": "Update campaign details",
                "tags": ["Campaigns"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "campaignId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "security": [{ "BearerAuth": [] }],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CampaignUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Campaign updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Campaign"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/analytics/campaign/{campaignId}": {
            "get": {
                "summary": "Get campaign analytics",
                "tags": ["Analytics"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "campaignId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "security": [{ "BearerAuth": [] }],
                "responses": {
                    "200": {
                        "description": "Campaign analytics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CampaignAnalytics"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/api/content/calendar": {
            "get": {
                "summary": "Get content calendar",
                "tags": ["Content"],
                "security": [{ "BearerAuth": [] }],
                "responses": {
                    "200": {
                        "description": "Content calendar retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContentCalendar"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/client-relationships": {
            "post": {
                "summary": "Create a new client relationship",
                "tags": ["ClientRelationships"],
                "security": [{ "BearerAuth": [] }],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ClientRelationshipCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Client relationship created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ClientRelationship"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    }
                }
            }
        },
        "/api/revenue/overview": {
            "get": {
                "summary": "Get revenue overview",
                "tags": ["Revenue"],
                "security": [{ "BearerAuth": [] }],
                "parameters": [
                    {
                        "in": "query",
                        "name": "startDate",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "endDate",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Revenue overview retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RevenueOverview"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/revenue/entries": {
            "post": {
                "summary": "Add revenue entry",
                "tags": ["Revenue"],
                "security": [{ "BearerAuth": [] }],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RevenueEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Revenue entry added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RevenueEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    }
                }
            }
        },
        "/api/notifications": {
            "get": {
                "summary": "Get user notifications",
                "tags": ["Notifications"],
                "security": [{ "BearerAuth": [] }],
                "responses": {
                    "200": {
                        "description": "List of notifications",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Notification"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/settings/profile": {
            "put": {
                "summary": "Update user profile settings",
                "tags": ["Settings"],
                "security": [{ "BearerAuth": [] }],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserSettings"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Settings updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserSettings"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/integrations/phyllo": {
            "post": {
                "summary": "Connect Phyllo account",
                "tags": ["Integrations"],
                "security": [{ "BearerAuth": [] }],
                "responses": {
                    "200": {
                        "description": "Phyllo integration successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/reports/campaign-performance/{campaignId}": {
            "get": {
                "summary": "Generate campaign performance report",
                "tags": ["Reports"],
                "security": [{ "BearerAuth": [] }],
                "parameters": [
                    {
                        "in": "path",
                        "name": "campaignId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PDF report generated successfully",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "UserRegistration": {
                "type": "object",
                "required": ["email", "password", "role"],
                "properties": {
                    "name": { "type": "string" },
                    "email": { "type": "string", "format": "email" },
                    "password": { "type": "string", "format": "password" },
                    "role": {
                        "type": "string",
                        "enum": ["admin", "brand", "influencer"]
                    }
                }
            },
            "UserLogin": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                    "email": { "type": "string", "format": "email" },
                    "password": { "type": "string", "format": "password" }
                }
            },
            "AuthToken": {
                "type": "object",
                "properties": {
                    "token": { "type": "string" },
                    "expiresIn": { "type": "integer" }
                }
            },
            "UserUpdate": {
                "type": "object",
                "properties": {
                    "name": { "type": "string" },
                    "password": { "type": "string", "format": "password" }
                }
            },
            "InfluencerCreate": {
                "type": "object",
                "required": ["name", "socialAccounts"],
                "properties": {
                    "name": { "type": "string" },
                    "socialAccounts": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "platform": { "type": "string" },
                                "username": { "type": "string" },
                                "followers": { "type": "integer" },
                                "engagementRate": { "type": "number" }
                            }
                        }
                    }
                }
            },
            "InfluencerUpdate": {
                "type": "object",
                "properties": {
                    "name": { "type": "string" },
                    "socialAccounts": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "platform": { "type": "string" },
                                "username": { "type": "string" },
                                "followers": { "type": "integer" },
                                "engagementRate": { "type": "number" }
                            }
                        }
                    }
                }
            },
            "CampaignCreate": {
                "type": "object",
                "required": ["name", "brandId", "budget"],
                "properties": {
                    "name": { "type": "string" },
                    "brandId": { "type": "string" },
                    "influencers": {
                        "type": "array",
                        "items": { "type": "string" }
                    },
                    "budget": { "type": "number" },
                    "status": {
                        "type": "string",
                        "enum": ["draft", "active", "completed"],
                        "default": "draft"
                    }
                }
            },
            "CampaignUpdate": {
                "type": "object",
                "properties": {
                    "name": { "type": "string" },
                    "influencers": {
                        "type": "array",
                        "items": { "type": "string" }
                    },
                    "budget": { "type": "number" },
                    "status": {
                        "type": "string",
                        "enum": ["draft", "active", "completed"]
                    }
                }
            },
            "ContentCalendar": {
                "type": "object",
                "properties": {
                    "entries": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "date": { "type": "string", "format": "date" },
                                "platform": { "type": "string" },
                                "content": { "type": "string" },
                                "status": {
                                    "type": "string",
                                    "enum": ["draft", "scheduled", "published"]
                                }
                            }
                        }
                    }
                }
            },
            "ClientRelationshipCreate": {
                "type": "object",
                "required": ["influencerId", "clientId"],
                "properties": {
                    "influencerId": { "type": "string" },
                    "clientId": { "type": "string" },
                    "status": {
                        "type": "string",
                        "enum": ["active", "past", "potential"]
                    }
                }
            },
            "RevenueOverview": {
                "type": "object",
                "properties": {
                    "totalRevenue": { "type": "number" },
                    "monthlyTrend": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "month": { "type": "string" },
                                "amount": { "type": "number" }
                            }
                        }
                    },
                    "pendingPayments": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "amount": { "type": "number" },
                                "dueDate": { "type": "string", "format": "date" }
                            }
                        }
                    }
                }
            },
            "Notification": {
                "type": "object",
                "properties": {
                    "type": { "type": "string" },
                    "message": { "type": "string" },
                    "timestamp": { "type": "string", "format": "date-time" }
                }
            },
            "UserSettings": {
                "type": "object",
                "properties": {
                    "notificationsEnabled": { "type": "boolean" },
                    "preferredCurrency": { "type": "string" }
                }
            },
            "User": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "role": {
                        "type": "string",
                        "enum": ["admin", "brand", "influencer"]
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "Influencer": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "socialAccounts": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "platform": {
                                    "type": "string"
                                },
                                "username": {
                                    "type": "string"
                                },
                                "followers": {
                                    "type": "integer"
                                },
                                "engagementRate": {
                                    "type": "number"
                                }
                            }
                        }
                    },
                    "phylloId": {
                        "type": "string"
                    }
                }
            },
            "Campaign": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "budget": {
                        "type": "number"
                    },
                    "status": {
                        "type": "string",
                        "enum": ["draft", "active", "completed"]
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date"
                    }
                }
            },
            "CampaignAnalytics": {
                "type": "object",
                "properties": {
                    "impressions": {
                        "type": "integer"
                    },
                    "engagement": {
                        "type": "number"
                    },
                    "clicks": {
                        "type": "integer"
                    },
                    "conversions": {
                        "type": "integer"
                    }
                }
            },
            "ClientRelationship": {
                "type": "object",
                "properties": {
                    "influencerId": {
                        "type": "string"
                    },
                    "clientId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": ["active", "past", "potential"]
                    }
                }
            },
            "RevenueEntry": {
                "type": "object",
                "properties": {
                    "campaignId": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "number"
                    },
                    "status": {
                        "type": "string",
                        "enum": ["pending", "paid"]
                    }
                }
            },
            "Error": {
                "type": "object",
                "properties": {
                    "statusCode": {
                        "type": "integer"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            }
        },
        "securitySchemes": {
            "BearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "responses": {
            "BadRequest": {
                "description": "Bad request",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            },
            "Unauthorized": {
                "description": "Unauthorized",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            },
            "NotFound": {
                "description": "Resource not found",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            }
        }
    }
}
